{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction PedidoListComponent_tr_22_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const produto_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", produto_r5.produto_descricao, \" - Quantidade: \", produto_r5.quantidade, \" \");\n  }\n}\n\nfunction PedidoListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"ul\");\n    i0.ɵɵtemplate(13, PedidoListComponent_tr_22_li_13_Template, 2, 2, \"li\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function PedidoListComponent_tr_22_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const pedido_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deletarPedido(pedido_r3.id);\n    });\n    i0.ɵɵelement(16, \"i\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const pedido_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pedido_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pedido_r3.cliente_razao_social);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 5, pedido_r3.data_do_pedido, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 8, pedido_r3.valor_total, \"BRL\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", pedido_r3.produtos);\n  }\n}\n\nfunction PedidoListComponent_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cliente_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cliente_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cliente_r8.razao_social);\n  }\n}\n\nfunction PedidoListComponent_div_40_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const produto_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", produto_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(produto_r12.descricao);\n  }\n}\n\nfunction PedidoListComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 25)(2, \"div\", 26)(3, \"select\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function PedidoListComponent_div_40_Template_select_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const produtoPedido_r9 = restoredCtx.$implicit;\n      return produtoPedido_r9.produto_id = $event;\n    });\n    i0.ɵɵtemplate(4, PedidoListComponent_div_40_option_4_Template, 2, 2, \"option\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 28)(6, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function PedidoListComponent_div_40_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const produtoPedido_r9 = restoredCtx.$implicit;\n      return produtoPedido_r9.quantidade = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 30)(8, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function PedidoListComponent_div_40_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r10 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.removerProduto(i_r10);\n    });\n    i0.ɵɵtext(9, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const produtoPedido_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"produto_id\", i_r10, \"\");\n    i0.ɵɵproperty(\"ngModel\", produtoPedido_r9.produto_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.produtos);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"quantidade\", i_r10, \"\");\n    i0.ɵɵproperty(\"ngModel\", produtoPedido_r9.quantidade);\n  }\n}\n\nexport let PedidoListComponent = /*#__PURE__*/(() => {\n  class PedidoListComponent {\n    constructor(http) {\n      this.http = http;\n      this.pedidos = [];\n      this.clientes = [];\n      this.produtos = [];\n      this.novoPedido = {\n        cliente_id: '',\n        produtos: []\n      };\n    }\n\n    ngOnInit() {\n      this.carregarPedidos();\n      this.carregarClientes();\n      this.carregarProdutos();\n    }\n\n    carregarPedidos() {\n      this.http.get('http://localhost:3000/pedidos').subscribe(data => this.pedidos = data);\n    }\n\n    carregarClientes() {\n      this.http.get('http://localhost:3000/clientes').subscribe(data => this.clientes = data);\n    }\n\n    carregarProdutos() {\n      this.http.get('http://localhost:3000/produtos').subscribe(data => {\n        this.produtos = data;\n        console.log('Produtos carregados:', this.produtos);\n      });\n    }\n\n    adicionarProduto() {\n      this.novoPedido.produtos.push({\n        produto_id: '',\n        quantidade: 1\n      });\n    }\n\n    removerProduto(index) {\n      this.novoPedido.produtos.splice(index, 1);\n    }\n\n    onSubmitPedido() {\n      let valorTotal = 0;\n      this.novoPedido.produtos = this.novoPedido.produtos.map(produtoPedido => {\n        const produto = this.produtos.find(p => p.id === Number(produtoPedido.produto_id));\n\n        if (produto && produto.valor_venda) {\n          produtoPedido.valor_venda = produto.valor_venda;\n          produtoPedido.valor_total = produto.valor_venda * produtoPedido.quantidade;\n          valorTotal += produtoPedido.valor_total;\n        } else {\n          console.error('Produto sem valor_venda:', produtoPedido);\n        }\n\n        return produtoPedido;\n      });\n\n      if (valorTotal === 0) {\n        Swal.fire('Erro!', 'Nenhum produto válido foi selecionado.', 'error');\n        return;\n      }\n\n      this.novoPedido.valor_total = valorTotal;\n      console.log('Enviando pedido:', JSON.stringify(this.novoPedido, null, 2));\n      this.http.post('http://localhost:3000/pedidos', this.novoPedido, {\n        observe: 'response'\n      }).subscribe(response => {\n        if (response.status === 201) {\n          Swal.fire({\n            title: 'Sucesso!',\n            text: 'Pedido criado com sucesso.',\n            icon: 'success',\n            confirmButtonText: 'OK'\n          }).then(() => {\n            // Fechar o modal usando Bootstrap diretamente\n            const modalElement = document.getElementById('cadastroPedidoModal');\n\n            if (modalElement) {\n              this.closeModal();\n            }\n\n            this.ngOnInit(); // Recarregar os produtos\n          });\n        } else {\n          this.showErrorAlert();\n        }\n      }, error => {\n        if (error.status === 201) {\n          Swal.fire({\n            title: 'Sucesso!',\n            text: 'Pedido criado com sucesso.',\n            icon: 'success',\n            confirmButtonText: 'OK'\n          }).then(() => {\n            const modalElement = document.getElementById('cadastroPedidoModal');\n\n            if (modalElement) {\n              this.closeModal();\n            }\n\n            this.ngOnInit(); // Recarregar os produtos\n          });\n        } else {\n          console.error('Erro ao criar pedido:', error);\n          this.showErrorAlert();\n        }\n      });\n    }\n\n    deletarPedido(pedidoId) {\n      Swal.fire({\n        title: 'Tem certeza?',\n        text: 'Você não poderá reverter isso!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, deletar!',\n        cancelButtonText: 'Não, cancelar'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.http.delete(`http://localhost:3000/pedidos/${pedidoId}`, {\n            observe: 'response'\n          }).subscribe(response => {\n            if (response.status === 200) {\n              Swal.fire({\n                title: 'Deletado!',\n                text: 'O pedido foi deletado com sucesso.',\n                icon: 'success',\n                confirmButtonText: 'OK'\n              }).then(() => {\n                this.ngOnInit(); // Recarregar os produtos\n              });\n            } else {\n              this.showErrorAlert();\n            }\n          }, error => {\n            if (error.status === 200) {\n              Swal.fire({\n                title: 'Deletado!',\n                text: 'O pedido foi deletado com sucesso.',\n                icon: 'success',\n                confirmButtonText: 'OK'\n              }).then(() => {\n                this.ngOnInit(); // Recarregar os produtos\n              });\n            } else {\n              console.error('Erro ao deletar pedido:', error);\n              this.showErrorAlert();\n            }\n          });\n        }\n      });\n    }\n\n    resetPedidoForm() {\n      this.novoPedido = {\n        cliente_id: '',\n        produtos: []\n      };\n    }\n\n    closeModal() {\n      const modals = document.querySelectorAll('.modal.show');\n      modals.forEach(modalElement => {\n        const modal = window['bootstrap'].Modal.getInstance(modalElement);\n\n        if (modal) {\n          modal.hide();\n        }\n      });\n      const backdrops = document.querySelectorAll('.modal-backdrop.show');\n      backdrops.forEach(backdrop => {\n        var _a;\n\n        return (_a = backdrop.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(backdrop);\n      });\n      setTimeout(() => {\n        const body = document.querySelector('body');\n\n        if (body) {\n          body.classList.remove('modal-open');\n          body.style.paddingRight = '';\n          body.style.overflow = '';\n        }\n      }, 300);\n    }\n\n    showSuccessAlert() {\n      Swal.fire('Sucesso!', 'A operação foi realizada com sucesso.', 'success').then(() => this.closeModal());\n    }\n\n    showErrorAlert() {\n      Swal.fire('Erro!', 'Ocorreu um erro ao realizar a operação. Por favor, tente novamente.', 'error');\n    }\n\n  }\n\n  PedidoListComponent.ɵfac = function PedidoListComponent_Factory(t) {\n    return new (t || PedidoListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  PedidoListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PedidoListComponent,\n    selectors: [[\"app-pedido-list\"]],\n    decls: 45,\n    vars: 4,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"text-center\", \"mb-4\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#cadastroPedidoModal\", 1, \"btn\", \"btn-primary\", \"mb-3\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"cadastroPedidoModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"cadastroPedidoModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"cadastroPedidoModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"cliente_id\", 1, \"form-label\"], [\"id\", \"cliente_id\", \"name\", \"cliente_id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"produto_id\", 1, \"form-label\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [3, \"value\"], [1, \"row\", \"mb-2\"], [1, \"col-md-6\"], [1, \"form-control\", 3, \"ngModel\", \"name\", \"ngModelChange\"], [1, \"col-md-4\"], [\"type\", \"number\", \"placeholder\", \"Quantidade\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"ngModelChange\"], [1, \"col-md-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function PedidoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Lista de Pedidos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵtext(4, \"Novo Pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"table\", 4)(7, \"thead\", 5)(8, \"tr\")(9, \"th\");\n        i0.ɵɵtext(10, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Data do Pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Valor Total\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Produtos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"tbody\");\n        i0.ɵɵtemplate(22, PedidoListComponent_tr_22_Template, 17, 11, \"tr\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 7)(24, \"div\", 8)(25, \"div\", 9)(26, \"div\", 10)(27, \"h5\", 11);\n        i0.ɵɵtext(28, \"Cadastro de Pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"button\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 13)(31, \"form\", 14);\n        i0.ɵɵlistener(\"ngSubmit\", function PedidoListComponent_Template_form_ngSubmit_31_listener() {\n          return ctx.onSubmitPedido();\n        });\n        i0.ɵɵelementStart(32, \"div\", 15)(33, \"label\", 16);\n        i0.ɵɵtext(34, \"Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"select\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function PedidoListComponent_Template_select_ngModelChange_35_listener($event) {\n          return ctx.novoPedido.cliente_id = $event;\n        });\n        i0.ɵɵtemplate(36, PedidoListComponent_option_36_Template, 2, 2, \"option\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 15)(38, \"label\", 19);\n        i0.ɵɵtext(39, \"Produtos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, PedidoListComponent_div_40_Template, 10, 5, \"div\", 6);\n        i0.ɵɵelementStart(41, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function PedidoListComponent_Template_button_click_41_listener() {\n          return ctx.adicionarProduto();\n        });\n        i0.ɵɵtext(42, \"Adicionar Produto\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"button\", 21);\n        i0.ɵɵtext(44, \"Salvar\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pedidos);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.novoPedido.cliente_id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.novoPedido.produtos);\n      }\n    },\n    directives: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NumberValueAccessor, i3.DefaultValueAccessor],\n    pipes: [i2.DatePipe, i2.CurrencyPipe],\n    styles: [\".modal-body[_ngcontent-%COMP%]{text-align:left!important}\"]\n  });\n  return PedidoListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}