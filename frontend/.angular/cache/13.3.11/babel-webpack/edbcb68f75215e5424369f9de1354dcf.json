{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { HttpClient } from '@angular/common/http';\nimport consultarCNPJ from \"consultar-cnpj\";\nimport Swal from 'sweetalert2';\nimport * as bootstrap from 'bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction ClienteListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ClienteListComponent_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const cliente_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.deletarCliente(cliente_r2.id);\n    });\n    i0.ɵɵelement(11, \"i\", 25);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const cliente_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.razao_social);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.cnpj);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.email);\n  }\n}\n\nfunction ClienteListComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \"CNPJ INV\\u00C1LIDO!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClienteListComponent = /*#__PURE__*/(() => {\n  class ClienteListComponent {\n    constructor(http) {\n      this.http = http;\n      this.clientes = [];\n      this.cliente = {\n        cnpj: '',\n        razao_social: '',\n        email: ''\n      };\n      this.cnpjInvalido = false;\n    }\n\n    ngOnInit() {\n      this.http.get('http://localhost:3000/clientes').subscribe(data => {\n        this.clientes = data;\n      });\n    }\n\n    consultarCNPJ() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.cliente.cnpj) {\n          try {\n            const empresa = yield consultarCNPJ(this.cliente.cnpj);\n\n            if (empresa && empresa.razao_social) {\n              console.log(\"Dados retornados:\", empresa);\n              this.cnpjInvalido = false;\n              this.cliente.razao_social = empresa.razao_social;\n              this.cliente.email = empresa.estabelecimento.email || '';\n            } else {\n              this.definirCNPJInvalido();\n            }\n          } catch (error) {\n            this.definirCNPJInvalido();\n            console.error(\"Erro ao consultar CNPJ:\", error);\n          }\n        }\n      });\n    }\n\n    definirCNPJInvalido() {\n      this.cnpjInvalido = true;\n      this.cliente.razao_social = '';\n      this.cliente.email = '';\n    }\n\n    onSubmit() {\n      if (!this.cnpjInvalido) {\n        this.http.post('http://localhost:3000/clientes', this.cliente, {\n          observe: 'response'\n        }).subscribe(response => {\n          if (response.status === 201) {\n            Swal.fire({\n              title: 'Sucesso!',\n              text: 'Cliente inserido com sucesso.',\n              icon: 'success',\n              confirmButtonText: 'OK'\n            }).then(() => {\n              // Fechar o modal usando Bootstrap diretamente\n              const modalElement = document.getElementById('cadastroClienteModal');\n\n              if (modalElement) {\n                const modal = bootstrap.Modal.getInstance(modalElement);\n\n                if (modal) {\n                  modal.hide();\n                }\n              }\n\n              this.ngOnInit(); // Recarregar os produtos\n            });\n          } else {\n            this.showErrorAlert();\n          }\n        }, error => {\n          if (error.status === 201) {\n            Swal.fire({\n              title: 'Sucesso!',\n              text: 'Cliente inserido com sucesso.',\n              icon: 'success',\n              confirmButtonText: 'OK'\n            }).then(() => {\n              const modalElement = document.getElementById('cadastroClienteModal');\n\n              if (modalElement) {\n                const modal = bootstrap.Modal.getInstance(modalElement);\n\n                if (modal) {\n                  modal.hide();\n                }\n              }\n\n              this.ngOnInit(); // Recarregar os produtos\n            });\n          } else {\n            console.error('Erro ao atualizar cliente:', error);\n            this.showErrorAlert();\n          }\n        });\n      }\n    }\n\n    resetForm() {\n      this.cliente = {\n        cnpj: '',\n        razao_social: '',\n        email: ''\n      };\n      this.cnpjInvalido = false;\n    }\n\n    closeModal() {\n      // Fechar o modal\n      const modals = document.querySelectorAll('.modal.show');\n      modals.forEach(modalElement => {\n        const modal = window['bootstrap'].Modal.getInstance(modalElement);\n\n        if (modal) {\n          modal.hide();\n        }\n      }); // Remover elementos de backdrop\n\n      const backdrops = document.querySelectorAll('.modal-backdrop.show');\n      backdrops.forEach(backdrop => {\n        var _a;\n\n        (_a = backdrop.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(backdrop);\n      }); // Usar setTimeout para esperar um pouco antes de restaurar o comportamento da rolagem\n\n      setTimeout(() => {\n        const body = document.querySelector('body');\n\n        if (body) {\n          body.classList.remove('modal-open');\n          body.style.paddingRight = ''; // Remove o padding aplicado pelo modal\n\n          body.style.overflow = ''; // Remove o overflow hidden\n        }\n      }, 300); // Ajuste o valor conforme necessário\n    }\n\n    deletarCliente(clienteId) {\n      Swal.fire({\n        title: 'Tem certeza?',\n        text: 'Você não poderá reverter isso!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sim, deletar!',\n        cancelButtonText: 'Não, cancelar'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.http.delete(`http://localhost:3000/clientes/${clienteId}`, {\n            observe: 'response'\n          }).subscribe(response => {\n            if (response.status === 200) {\n              Swal.fire({\n                title: 'Deletado!',\n                text: 'O cliente foi deletado com sucesso.',\n                icon: 'success',\n                confirmButtonText: 'OK'\n              }).then(() => {\n                this.ngOnInit(); // Recarregar os clientes\n              });\n            } else {\n              this.showErrorAlert();\n            }\n          }, error => {\n            if (error.status === 200) {\n              Swal.fire({\n                title: 'Sucesso!',\n                text: 'Cliente atualizado com sucesso.',\n                icon: 'success',\n                confirmButtonText: 'OK'\n              }).then(() => {\n                const modalElement = document.getElementById('cadastroClienteModal');\n\n                if (modalElement) {\n                  const modal = bootstrap.Modal.getInstance(modalElement);\n\n                  if (modal) {\n                    modal.hide();\n                  }\n                }\n\n                this.ngOnInit(); // Recarregar os produtos\n              });\n            } else {\n              console.error('Erro ao atualizar produto:', error);\n              this.showErrorAlert();\n            }\n          });\n        }\n      });\n    }\n\n    showSuccessAlert() {\n      Swal.fire({\n        title: 'Sucesso!',\n        text: 'A operação foi realizada com sucesso.',\n        icon: 'success',\n        confirmButtonText: 'OK'\n      }).then(() => {\n        //this.closeModal();\n        const modalElement = document.getElementById('cadastroClienteModal');\n\n        if (modalElement) {\n          const modal = bootstrap.Modal.getInstance(modalElement);\n\n          if (modal) {\n            modal.hide();\n          }\n        }\n      });\n    }\n\n    showErrorAlert() {\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Ocorreu um erro ao cadastrar o cliente. Por favor, tente novamente.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n\n    showConflictAlert() {\n      Swal.fire({\n        title: 'CNPJ Já Cadastrado!',\n        text: 'O CNPJ informado já consta no banco de dados.',\n        icon: 'warning',\n        confirmButtonText: 'OK'\n      });\n    }\n\n  }\n\n  ClienteListComponent.ɵfac = function ClienteListComponent_Factory(t) {\n    return new (t || ClienteListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  ClienteListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClienteListComponent,\n    selectors: [[\"app-cliente-list\"]],\n    decls: 45,\n    vars: 5,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"text-center\", \"mb-4\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#cadastroClienteModal\", 1, \"btn\", \"btn-primary\", \"mb-3\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"cadastroClienteModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"cadastroClienteModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"cadastroClienteModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"cnpj\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cnpj\", \"name\", \"cnpj\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"razao_social\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"razao_social\", \"name\", \"razao_social\", \"readonly\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"text-danger\"]],\n    template: function ClienteListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Lista de Clientes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵtext(4, \"Adicionar Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"table\", 4)(7, \"thead\", 5)(8, \"tr\")(9, \"th\");\n        i0.ɵɵtext(10, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Raz\\u00E3o Social\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"CNPJ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, ClienteListComponent_tr_20_Template, 12, 4, \"tr\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 7)(22, \"div\", 8)(23, \"div\", 9)(24, \"div\", 10)(25, \"h5\", 11);\n        i0.ɵɵtext(26, \"Cadastro de Cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"button\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 13)(29, \"form\", 14);\n        i0.ɵɵlistener(\"ngSubmit\", function ClienteListComponent_Template_form_ngSubmit_29_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(30, \"div\", 15)(31, \"label\", 16);\n        i0.ɵɵtext(32, \"CNPJ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function ClienteListComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.cliente.cnpj = $event;\n        })(\"input\", function ClienteListComponent_Template_input_input_33_listener() {\n          return ctx.consultarCNPJ();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, ClienteListComponent_div_34_Template, 2, 0, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 15)(36, \"label\", 19);\n        i0.ɵɵtext(37, \"Raz\\u00E3o Social\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function ClienteListComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.cliente.razao_social = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 15)(40, \"label\", 21);\n        i0.ɵɵtext(41, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"input\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function ClienteListComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.cliente.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"button\", 23);\n        i0.ɵɵtext(44, \"Salvar\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.cnpj);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cnpjInvalido);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.razao_social);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n      }\n    },\n    directives: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.NgIf],\n    styles: [\".modal-body[_ngcontent-%COMP%]{text-align:left!important}\"]\n  });\n  return ClienteListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}